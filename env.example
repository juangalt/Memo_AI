## Example Environment Configuration for Memo AI Coach
# Copy to .env and adjust values as needed.
# Minimum variables are listed first. Optional overrides follow.

# --- Minimum Required ---
# DOMAIN: Public hostname for routing and frontend config.
# - Used by Traefik rules and backend `/api/v1/config/frontend`.
# - If unset, Traefik labels default to localhost, but the backend
#   environment var could be empty which breaks frontend config URLs.
DOMAIN=localhost

# APP_ENV: Runtime environment. Affects logging defaults and config profiles.
# - Allowed: development | production (staging also supported)
# - docker-compose supplies a production default if not set.
APP_ENV=production

# CLAUDE_API_KEY: Anthropic Claude API key for real evaluations.
# - Leave unset or empty to use mock mode for local development.
# - Future-proof: project will accept multiple provider keys later.
# - Example: sk-ant-api... (do NOT commit real keys)
CLAUDE_API_KEY=

# --- Optional (Recommended) ---
# ADMIN_EMAIL: Contact email used by Traefik Let's Encrypt.
# - If unset, docker-compose falls back to admin@example.com.
# - Recommended to set in production for certificate issuance notices.
# ADMIN_EMAIL=admin@your-domain.com

# --- Optional Overrides (override YAML/runtime defaults) ---
# ADMIN_PASSWORD: Initial admin password for DB initialization.
# - If not set on first run, defaults to admin123.
# - If set later, init script updates the admin password.
# ADMIN_PASSWORD=change-this-in-production

# SESSION_TIMEOUT: Session expiration override in seconds.
# - Overrides config/auth.yaml session_management.session_timeout if set.
# - Example: 3600 (1 hour)
# SESSION_TIMEOUT=3600

# --- Optional Logging Overrides ---
# DEBUG: If set (any value), forces DEBUG log level.
# DEBUG=1

# LOG_LEVEL: Explicit log level (DEBUG, INFO, WARNING, ERROR, CRITICAL).
# - Ignored if DEBUG is set. Defaults based on APP_ENV.
# LOG_LEVEL=INFO

# LOG_FILE: Path to log file. If unset, logs go to console only.
# LOG_FILE=logs/app.log

# LOG_FORMAT: Custom Python logging format string.
# LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
